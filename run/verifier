#!/usr/bin/env ruby
description = 'Verifies all features'

basename = File.basename(__FILE__).to_s
if ARGV[0] == 'describe'
  puts "  #{basename.ljust(ARGV[1].to_i)} - #{description}"
  exit 0
elsif ARGV.length == 1 && ARGV[0] == '--help'
  puts <<HELP
Usage: run/#{basename} [profile] [tag]
Example:
  run/#{basename}
  run/#{basename} ci
  run/#{basename} wip
See cucumber.yml for available purposes
HELP
  exit 0
end

require 'rubygems'
require 'yaml'
require 'fileutils'
require 'uri'
require 'net/ssh/gateway'
require File.expand_path('../../features/support/cloud_configuration.rb', __FILE__)

include CloudConfiguration

@host = URI.parse(ConfigFile.web_client_url).host
def create_tunnel
  username = ConfigFile.server_username || `whoami`.chomp
  abort 'ERROR: Username must be specified!' if username.to_s.empty?

  gateway = Net::SSH::Gateway.new(@host, username)
  gateway.open(@host, 35357, 35357)
  gateway.open(@host, 8776, 8776)
  gateway.open(@host, 9292, 9292)
  gateway.open(@host, 8774, 8774)
  gateway.open(@host, 8773, 8773)
  gateway.open(@host, 5000, 5000)
  gateway
end

if ConfigFile.tunnel
  begin
    print "Connecting to #{@host} via SSH tunnel... "
    @tunnel = create_tunnel
    puts 'Connected.'
  rescue => e
    abort "ERROR: #{e.inspect}"
  end
end

FileUtils.rm_rf Dir['output/*']
puts "Start at #{Time.now}"
if ARGV.length == 1
  system "bundle exec cucumber --profile #{ARGV[0]} --t ~@future --t ~@pending"
elsif ARGV.length == 2
  system "bundle exec cucumber --profile #{ARGV[0]} --t ~@future --t ~@pending --t #{ARGV[1]}"
else
  system "bundle exec cucumber --profile default --t ~@future --t ~@pending"
end
puts "Finished at #{Time.now}"

if @tunnel
  @tunnel.shutdown!
  puts "SSH tunnel closed."
end
